{"version":3,"sources":["redux/actionTypes.ts","redux/todoreducer.ts","redux/store.ts","components/Header.tsx","components/TodoItem.tsx","components/TodoInput.tsx","components/TodoSortBar.tsx","components/TodoSearchBar.tsx","components/TodoList.tsx","redux/actions.ts","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_COMPLETE","initialState","id","text","isCompleted","toDoReducer","state","action","type","filter","todo","map","reducers","combineReducers","todos","persistedState","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","useStyles","makeStyles","header","width","backgroundColor","display","title","color","margin","padding","Header","classes","className","Typography","variant","gutterBottom","todoItem","alignItems","border","todoItemText","flex","fontSize","todoItemCheckBox","alignContent","todoItemBtn","height","TodoItem","props","task","removeTodo","toggleComplete","Checkbox","checked","onChange","inputProps","Fab","aria-label","onClick","size","todoInputBox","justifyContent","todoTextArea","TodoInput","useState","setText","addTodo","validateInput","trim","length","TextField","label","value","error","helperText","e","target","Date","now","disabled","sortBar","TodoSortBar","handleFilter","ButtonGroup","Button","searchBar","searchTextArea","cancelBtn","cursor","TodoSearchBar","handleSearch","query","Input","endAdornment","InputAdornment","position","Cancel","SearchRounded","theme","todoList","breakpoints","down","mapDispatch","addTask","removeTask","toggleTaskComplete","connector","connect","tasks","setTasks","setQuery","useEffect","filteredTodos","includes","searchQuery","searchedTodos","toLowerCase","footer","bottom","author","right","Footer","Link","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAaA,EAAW,WACXC,EAAc,cACdC,EAAkB,kBCCzBC,EAA2B,CAC/B,CACEC,GAAI,EACJC,KAAM,kBACNC,aAAa,GAEf,CACEF,GAAI,EACJC,KAAM,2BACNC,aAAa,GAEf,CACEF,GAAI,EACJC,KAAM,mBACNC,aAAa,IA4BFC,EAxBK,WAA6E,IAA5EC,EAA2E,uDAAnEL,EAAcM,EAAqD,uCAC9F,OAAQA,EAAOC,MACb,KAAKV,EACH,MAAM,GAAN,mBACKQ,GADL,CACY,CACRJ,GAAIK,EAAOL,GACXC,KAAMI,EAAOJ,KACbC,YAAaG,EAAOH,eAG1B,KAAKL,EACH,OAAOO,EAAMG,QAAO,SAACC,GAAD,OAAUA,EAAKR,KAAOK,EAAOL,MACnD,KAAKF,EACH,OAAOM,EAAMK,KAAI,SAACD,GAChB,OAAIA,EAAKR,KAAOK,EAAOL,GACd,2BAAKQ,GAAZ,IAAkBN,aAAcM,EAAKN,cAEhCM,KAEX,QACE,OAAOJ,ICtCPM,EAAWC,YAAgB,CAAEC,MAAOT,IAEpCU,EAAiBC,aAAaC,QAAQ,YACxCC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,GAEEG,EAAQC,YAAYT,EAAUG,GAEpCK,EAAME,WAAU,WACdN,aAAaO,QAAQ,WAAYL,KAAKM,UAAUJ,EAAMK,gBAGzCL,Q,wBCZTM,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,MAAO,OACPC,gBAAiB,UACjBC,QAAS,QAEXC,MAAO,CACLC,MAAO,UACPC,OAAQ,SACRC,QAAS,YAgBEC,EAZA,WACb,IAAMC,EAAUX,IAEhB,OACE,qBAAKY,UAAWD,EAAQT,OAAxB,SACE,cAACW,EAAA,EAAD,CAAYD,UAAWD,EAAQL,MAAOQ,QAAQ,KAAKC,cAAY,EAA/D,6B,mDCfAf,EAAYC,YAAW,CAC3Be,SAAU,CACRX,QAAS,OACTY,WAAY,SACZT,OAAQ,MACRU,OAAQ,oBACRT,QAAS,UAEXU,aAAc,CACZC,KAAM,OACNC,SAAU,OACVd,MAAO,WAETe,iBAAkB,CAChBC,aAAc,OAEhBC,YAAa,CACXC,OAAQ,SA8BGC,EA1BE,SAACC,GAA+E,IACvFC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,WAAYC,EAAmBH,EAAnBG,eACpBnB,EAAUX,IAEhB,OACE,sBAAKY,UAAWD,EAAQK,SAAxB,UACE,mBAAGJ,UAAWD,EAAQQ,aAAtB,SAAqCS,EAAKnD,OAC1C,cAACsD,EAAA,EAAD,CACEnB,UAAWD,EAAQW,iBACnBU,QAASJ,EAAKlD,YACduD,SAAU,kBAAMH,EAAeF,EAAKpD,KACpC0D,WAAY,CAAE,aAAc,sBAE9B,cAACC,EAAA,EAAD,CACEvB,UAAWD,EAAQa,YACnBjB,MAAM,YACN6B,aAAW,SACXC,QAAS,kBAAMR,EAAWD,EAAKpD,KAC/B8D,KAAK,QALP,SAOE,cAAC,IAAD,U,0BC3CFtC,EAAYC,YAAW,CAC3BsC,aAAc,CACZlC,QAAS,OACTmC,eAAgB,SAChB/B,QAAS,QAEXgC,aAAc,CACZtC,MAAO,SAqCIuC,EAjCG,SAACf,GAAgC,IAAD,EACxBgB,mBAAS,IADe,mBACzClE,EADyC,KACnCmE,EADmC,KAExCC,EAAYlB,EAAZkB,QACFlC,EAAUX,IAKV8C,EAAgB,iBAAwB,KAATrE,IAAgBA,EAAKsE,OAAOC,QAEjE,OACE,sBAAKpC,UAAWD,EAAQ4B,aAAxB,UACE,cAACU,EAAA,EAAD,CACErC,UAAWD,EAAQ8B,aACnBjE,GAAG,iBACH0E,MAAM,WACNC,MAAO1E,EACP2E,MAAON,IACPO,WAAYP,KAAmB,mBAC/Bb,SAAU,SAACqB,GAAD,OAAOV,EAAQU,EAAEC,OAAOJ,UAEpC,cAAChB,EAAA,EAAD,CACE5B,MAAM,UACN6B,aAAW,MACXC,QAAS,kBAnBbQ,EAAQW,KAAKC,MAAOhF,GAAM,QAC1BmE,EAAQ,KAmBJc,UAAWjF,EAAKsE,OAAOC,OAJzB,SAME,cAAC,IAAD,U,iBCvCFhD,EAAYC,YAAW,CAC3B0D,QAAS,CACPtD,QAAS,OACTmC,eAAgB,SAChBhC,OAAQ,eAuBGoD,EAnBK,SAACjC,GACa,IACxBkC,EAAiBlC,EAAjBkC,aACFlD,EAAUX,IAEhB,OACE,eAAC8D,EAAA,EAAD,CACElD,UAAWD,EAAQgD,QACnB7C,QAAQ,OACRP,MAAM,UACN6B,aAAW,4BAJb,UAME,cAAC2B,EAAA,EAAD,CAAQ1B,QAAS,kBAAMwB,KAAvB,iBACA,cAACE,EAAA,EAAD,CAAQ1B,QAAS,kBAAMwB,GAAa,IAApC,oBACA,cAACE,EAAA,EAAD,CAAQ1B,QAAS,kBAAMwB,GAAa,IAApC,2B,oCCrBA7D,EAAYC,YAAW,CAC3B+D,UAAW,CACT3D,QAAS,OACTmC,eAAgB,SAChBhC,OAAQ,aAEVyD,eAAgB,CACd9D,MAAO,OAET+D,UAAW,CACTC,OAAQ,aAkCGC,EA9BO,SAACzC,GAIrB,IAAMhB,EAAUX,IACRqE,EAAwB1C,EAAxB0C,aAAcC,EAAU3C,EAAV2C,MAEtB,OACE,qBAAK1D,UAAWD,EAAQqD,UAAxB,SACE,cAACO,EAAA,EAAD,CACE3D,UAAWD,EAAQsD,eACnBd,MAAOmB,EACPrC,SAAU,SAACqB,GAAD,OAAOe,EAAaf,EAAEC,OAAOJ,QACvC3E,GAAG,4BACHgG,aACE,eAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACGJ,GACD,cAACK,EAAA,EAAD,CACE/D,UAAWD,EAAQuD,UACnB7B,QAAS,kBAAMgC,EAAa,OAG9B,cAACO,EAAA,EAAD,YC9BN5E,EAAYC,aAAW,SAAC4E,GAAD,MAAY,CACvCC,SAAS,aACP3E,MAAO,MACPK,OAAQ,sBACRU,OAAQ,qBACP2D,EAAME,YAAYC,KAAK,KAAO,CAC7B7E,MAAO,YA4DP8E,EAAc,CAClBC,QC3EqB,SAAC1G,EAAYC,EAAcC,GAA3B,MAAqD,CAC1EI,KAAMV,EAAUI,KAAIC,OAAMC,gBD2E1ByG,WCxEwB,SAAC3G,GAAD,MAAiB,CAAEM,KAAMT,EAAaG,ODyE9D4G,mBCvE4B,SAAC5G,GAAD,MAAiB,CAAEM,KAAMR,EAAiBE,QD8EzD6G,EAJGC,aAPD,SAAC1G,GAAD,MAAuB,CAAEQ,MAAOR,EAAMQ,SAOnB6F,EAIrBI,EAjEE,SAAC1D,GAA2B,IAEzCvC,EACEuC,EADFvC,MAAO8F,EACLvD,EADKuD,QAASC,EACdxD,EADcwD,WAAYC,EAC1BzD,EAD0ByD,mBAExBzE,EAAUX,IAJ0B,EAKhB2C,mBAASvD,GALO,mBAKnCmG,EALmC,KAK5BC,EAL4B,OAMhB7C,mBAAS,IANO,mBAMnC2B,EANmC,KAM5BmB,EAN4B,KAgC1C,OAJAC,qBAAU,WACRF,EAASpG,KACR,CAACA,IAGF,sBAAKwB,UAAWD,EAAQmE,SAAxB,UACE,cAAC,EAAD,CAAWjC,QAASqC,IACpB,cAAC,EAAD,CACErB,aA5Be,SAACnF,GACpB,IAAIiH,EAAa,YAAOvG,GACV,KAAVkF,IACFqB,EAAgBvG,EAAML,QAAO,SAACC,GAAD,OAAUA,EAAKP,KAAKmH,SAAStB,OAEjC,qBAAhB5F,IACTiH,EAAgBA,EAAc5G,QAAO,SAACC,GAAD,OAAUA,EAAKN,cAAgBA,MAEtE8G,EAASG,MAsBP,cAAC,EAAD,CACEtB,aApBe,SAACwB,GACpB,GAAKA,EAAY9C,OAAOC,QAA0B,KAAhB6C,EAAlC,CACA,IAAMC,EAAgB1G,EAAML,QAC1B,SAACC,GAAD,OAAUA,EAAKP,KAAKsH,cAAcH,SAASC,EAAYE,kBAEzDP,EAASM,GACTL,EAASI,KAeLvB,MAAOA,IAERiB,EAAMtG,KAAI,SAAC2C,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,WAAYsD,EACZrD,eAAgBsD,GAHXxD,EAAKpD,a,SE9DdwB,EAAYC,YAAW,CAC3B+F,OAAQ,CACN7F,MAAO,OACPsB,OAAQ,KACRrB,gBAAiB,UACjBsE,SAAU,QACVuB,OAAQ,KAEVC,OAAQ,CACN3F,MAAO,UACPmE,SAAU,WACVuB,OAAQ,IACRE,MAAO,OACP9E,SAAU,UAgBC+E,EAZA,WACb,IAAMzF,EAAUX,IAEhB,OACE,qBAAKY,UAAWD,EAAQqF,OAAxB,SACE,cAACnF,EAAA,EAAD,CAAYD,UAAWD,EAAQuF,OAA/B,SACE,cAACG,EAAA,EAAD,CAAMC,KAAK,yCAAyCC,IAAI,aAAahD,OAAO,SAA5E,kCCVOiD,I,MARH,kBACV,eAAC,IAAD,CAAU9G,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCIW+G,GAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.0f6f82fc.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD-TODO';\nexport const REMOVE_TODO = 'REMOVE-TODO';\nexport const TOGGLE_COMPLETE = 'TOGGLE-COMPLETE';\n","import { AddTodoActionType, TodoType } from '../types/types';\nimport { ADD_TODO, REMOVE_TODO, TOGGLE_COMPLETE } from './actionTypes';\n\nconst initialState: TodoType[] = [\n  {\n    id: 1,\n    text: 'Solve test task',\n    isCompleted: true,\n  },\n  {\n    id: 2,\n    text: 'Pass technical interview',\n    isCompleted: false,\n  },\n  {\n    id: 3,\n    text: 'Accept the offer',\n    isCompleted: false,\n  },\n];\n\nconst toDoReducer = (state = initialState, action: (AddTodoActionType)): typeof initialState => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state, {\n          id: action.id,\n          text: action.text,\n          isCompleted: action.isCompleted,\n        },\n      ];\n    case REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.id);\n    case TOGGLE_COMPLETE:\n      return state.map((todo) => {\n        if (todo.id === action.id) {\n          return { ...todo, isCompleted: !todo.isCompleted };\n        }\n        return todo;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default toDoReducer;\n","import { combineReducers, createStore } from 'redux';\nimport toDoReducer from './todoreducer';\n\nconst reducers = combineReducers({ todos: toDoReducer });\n\nconst persistedState = localStorage.getItem('todoList')\n  ? JSON.parse(localStorage.getItem('todoList') as string)\n  : {};\n\nconst store = createStore(reducers, persistedState);\n\nstore.subscribe(() => {\n  localStorage.setItem('todoList', JSON.stringify(store.getState()));\n});\n\nexport default store;\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {todos: TodosState}\nexport type AppDispatch = typeof store.dispatch\n","import React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  header: {\n    width: '100%',\n    backgroundColor: '#EDE026',\n    display: 'flex',\n  },\n  title: {\n    color: '#171718',\n    margin: '0 auto',\n    padding: '15px 0',\n  },\n});\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.header}>\n      <Typography className={classes.title} variant=\"h3\" gutterBottom>\n        ToDoList App\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Checkbox, Fab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TodoType } from '../types/types';\n\nconst useStyles = makeStyles({\n  todoItem: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: '5px',\n    border: '#D5D9D9 2px solid',\n    padding: '0 10px',\n  },\n  todoItemText: {\n    flex: 'auto',\n    fontSize: '24px',\n    color: '#171718',\n  },\n  todoItemCheckBox: {\n    alignContent: 'end',\n  },\n  todoItemBtn: {\n    height: '50%',\n  },\n});\n\nconst TodoItem = (props: { task: TodoType, removeTodo: Function, toggleComplete: Function }) => {\n  const { task, removeTodo, toggleComplete } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.todoItem}>\n      <p className={classes.todoItemText}>{task.text}</p>\n      <Checkbox\n        className={classes.todoItemCheckBox}\n        checked={task.isCompleted}\n        onChange={() => toggleComplete(task.id)}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <Fab\n        className={classes.todoItemBtn}\n        color=\"secondary\"\n        aria-label=\"delete\"\n        onClick={() => removeTodo(task.id)}\n        size=\"small\"\n      >\n        <DeleteIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import React, { useState } from 'react';\nimport { Fab, makeStyles, TextField } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles({\n  todoInputBox: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '10px',\n  },\n  todoTextArea: {\n    width: '75%',\n  },\n});\n\nconst TodoInput = (props: {addTodo: Function}) => {\n  const [text, setText] = useState('');\n  const { addTodo } = props;\n  const classes = useStyles();\n  const handleClick = () => {\n    addTodo(Date.now(), text, false);\n    setText('');\n  };\n  const validateInput = (): boolean => text !== '' && !text.trim().length;\n\n  return (\n    <div className={classes.todoInputBox}>\n      <TextField\n        className={classes.todoTextArea}\n        id=\"standard-basic\"\n        label=\"New Task\"\n        value={text}\n        error={validateInput()}\n        helperText={validateInput() && 'Incorrect entry.'}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={() => handleClick()}\n        disabled={!text.trim().length}\n      >\n        <AddIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport default TodoInput;\n","import { Button, ButtonGroup, makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n  sortBar: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px auto',\n  },\n});\n\nconst TodoSortBar = (props:\n  { handleFilter: Function }) => {\n  const { handleFilter } = props;\n  const classes = useStyles();\n\n  return (\n    <ButtonGroup\n      className={classes.sortBar}\n      variant=\"text\"\n      color=\"primary\"\n      aria-label=\"text primary button group\"\n    >\n      <Button onClick={() => handleFilter()}>All</Button>\n      <Button onClick={() => handleFilter(false)}>Active</Button>\n      <Button onClick={() => handleFilter(true)}>Completed</Button>\n    </ButtonGroup>\n  );\n};\n\nexport default TodoSortBar;\n","import React from 'react';\nimport { Input, InputAdornment, makeStyles } from '@material-ui/core';\nimport { Cancel, SearchRounded } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  searchBar: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '10px auto',\n  },\n  searchTextArea: {\n    width: '90%',\n  },\n  cancelBtn: {\n    cursor: 'pointer',\n  },\n});\n\nconst TodoSearchBar = (props: {\n  handleSearch: Function,\n  query: string,\n}) => {\n  const classes = useStyles();\n  const { handleSearch, query } = props;\n\n  return (\n    <div className={classes.searchBar}>\n      <Input\n        className={classes.searchTextArea}\n        value={query}\n        onChange={(e) => handleSearch(e.target.value)}\n        id=\"input-with-icon-adornment\"\n        endAdornment={(\n          <InputAdornment position=\"end\">\n            {query && (\n            <Cancel\n              className={classes.cancelBtn}\n              onClick={() => handleSearch('')}\n            />\n            ) }\n            <SearchRounded />\n          </InputAdornment>\n            )}\n      />\n    </div>\n  );\n};\n\nexport default TodoSearchBar;\n","import React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { addTodo, removeTodo, toggleComplete } from '../redux/actions';\nimport { RootState } from '../redux/store';\nimport TodoItem from './TodoItem';\nimport TodoInput from './TodoInput';\nimport TodoSortBar from './TodoSortBar';\nimport TodoSearchBar from './TodoSearchBar';\n\nconst useStyles = makeStyles((theme) => ({\n  todoList: {\n    width: '50%',\n    margin: '10px auto 50px auto',\n    border: '#D5D9D9 2px solid',\n    [theme.breakpoints.down(500)]: {\n      width: '80%',\n    },\n  },\n}));\n\nconst TodoList = (props: PropsFromRedux) => {\n  const {\n    todos, addTask, removeTask, toggleTaskComplete,\n  } = props;\n  const classes = useStyles();\n  const [tasks, setTasks] = useState(todos);\n  const [query, setQuery] = useState('');\n\n  const handleFilter = (isCompleted?: boolean) => {\n    let filteredTodos = [...todos];\n    if (query !== '') {\n      filteredTodos = todos.filter((todo) => todo.text.includes(query));\n    }\n    if (typeof isCompleted !== 'undefined') {\n      filteredTodos = filteredTodos.filter((todo) => todo.isCompleted === isCompleted);\n    }\n    setTasks(filteredTodos);\n  };\n\n  const handleSearch = (searchQuery: string) => {\n    if (!searchQuery.trim().length && searchQuery !== '') return;\n    const searchedTodos = todos.filter(\n      (todo) => todo.text.toLowerCase().includes(searchQuery.toLowerCase()),\n    );\n    setTasks(searchedTodos);\n    setQuery(searchQuery);\n  };\n\n  useEffect(() => {\n    setTasks(todos);\n  }, [todos]);\n\n  return (\n    <div className={classes.todoList}>\n      <TodoInput addTodo={addTask} />\n      <TodoSortBar\n        handleFilter={handleFilter}\n      />\n      <TodoSearchBar\n        handleSearch={handleSearch}\n        query={query}\n      />\n      {tasks.map((task) => (\n        <TodoItem\n          key={task.id}\n          task={task}\n          removeTodo={removeTask}\n          toggleComplete={toggleTaskComplete}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst mapState = (state: RootState) => ({ todos: state.todos });\nconst mapDispatch = {\n  addTask: addTodo,\n  removeTask: removeTodo,\n  toggleTaskComplete: toggleComplete,\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(TodoList);\n","import { ADD_TODO, REMOVE_TODO, TOGGLE_COMPLETE } from './actionTypes';\n\nexport const addTodo = (id: number, text: string, isCompleted: boolean) => ({\n  type: ADD_TODO, id, text, isCompleted,\n});\n\nexport const removeTodo = (id: number) => ({ type: REMOVE_TODO, id });\n\nexport const toggleComplete = (id: number) => ({ type: TOGGLE_COMPLETE, id });\n","import React from 'react';\nimport { Link, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  footer: {\n    width: '100%',\n    height: '7%',\n    backgroundColor: '#EDE026',\n    position: 'fixed',\n    bottom: '0',\n  },\n  author: {\n    color: '#171718',\n    position: 'absolute',\n    bottom: '0',\n    right: '25px',\n    fontSize: '20px',\n  },\n});\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.footer}>\n      <Typography className={classes.author}>\n        <Link href=\"https://fenomen-alex.github.io/AlexCV/\" rel=\"noreferrer\" target=\"_blank\">by Alex Fomenko</Link>\n      </Typography>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Header from './components/Header';\nimport TodoList from './components/TodoList';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst App = () => (\n  <Provider store={store}>\n    <Header />\n    <TodoList />\n    <Footer />\n  </Provider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}